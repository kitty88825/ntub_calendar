# Generated by Django 3.1.2 on 2020-10-27 06:52

import app.events.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('calendars', '0005_calendar_color'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='行程名稱')),
                ('start_at', models.DateTimeField(verbose_name='開始時間')),
                ('end_at', models.DateTimeField(verbose_name='結束時間')),
                ('description', models.TextField(blank=True, null=True, verbose_name='備註')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='建立時間')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
                ('location', models.TextField(blank=True, null=True, verbose_name='地點')),
                ('nature', models.CharField(choices=[('meeting', '會議'), ('event', '行程')], default='event', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('editors', '編輯者'), ('participants', '參與者')], default='participants', max_length=15, verbose_name='身份')),
                ('response', models.CharField(choices=[('accept', '接受'), ('decline', '拒絕'), ('maybe', '不確定'), ('no_reply', '未回應')], default='no_reply', max_length=15, verbose_name='回應')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='EventInviteCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('accept', '接受'), ('decline', '拒絕'), ('no_reply', '未回應')], default='no_reply', max_length=15, verbose_name='回應')),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.calendar')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('main_calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_calendar', to='calendars.calendar')),
            ],
            options={
                'unique_together': {('calendar', 'event')},
            },
        ),
        migrations.CreateModel(
            name='EventAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=app.events.models.event_attachment_path, verbose_name='檔案位置')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='events.event')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='calendars',
            field=models.ManyToManyField(through='events.EventInviteCalendar', to='calendars.Calendar'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(related_name='participate_events', through='events.EventParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='subscribe_events', to=settings.AUTH_USER_MODEL),
        ),
    ]
